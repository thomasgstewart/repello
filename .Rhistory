suppressPackageStartupMessages(require(knitr))
suppressPackageStartupMessages(require(kableExtra))
set_token("user_token.txt")
#trello <- trello_updates("Projects", save=FALSE)
trello <- trello_updates("Projects", prior="checklist_2020-08-20.rds", save=TRUE)
for (i in 1:length(trello)){
if (trello[[i]]$contains_list=="List Available" & ("New Item" %in% (trello[[i]]$list_diff)$history | "Newly Completed" %in% (trello[[i]]$list_diff)$status)){
cat("## ", trello[[i]]$name, "\n\n")
temp <- trello[[i]]$list_diff %>% filter(history=="New Item" | status=="Newly Completed")
for (j in 1:nrow(temp)){
if (temp$history[j]=="New Item"){
temp$image[j] <- sprintf('![](New_sticker.png)', temp$history[j])
} else {
temp$image[j] <- ""
}
}
for (k in 1:nrow(temp)){
if (temp$status[k]=="Newly Completed"){
temp$complete[k] <- sprintf('![](check.png)', temp$status[k])
} else {
temp$complete[k] <- ""
}
}
temp <- temp %>% select(item, image, complete)
colnames(temp) <- c("item", "", "")
print(temp %>% kable(escape=F) %>% trimws %>% kable_styling(c("striped","bordered")) %>% column_spec(1, width="10cm") %>% column_spec(2,width="1cm") %>% column_spec(3, width=".5cm"))
cat("  \n")
}
}
trello[[92]]$list_diff
trello[[91]]$list_diff
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
suppressPackageStartupMessages(require(httr))
suppressPackageStartupMessages(require(tgsify))
suppressPackageStartupMessages(require(stringr))
suppressPackageStartupMessages(require(repello))
suppressPackageStartupMessages(require(knitr))
suppressPackageStartupMessages(require(kableExtra))
