parallel=TRUE)
plot(cvfit)
predict(cvfit, newx=x[1:10,], s="lambda.min", type="class")
load("PoissonExample.RData")
fit=glmnet(x, y, family="poisson")
plot(fit)
coef(fit, s=1)
predict(fit, newx=x[1:5,], type="response", s=c(.1,1))
cvfit = cv.glmnet(x, y, family="poisson")
plot(cvfit)
opt.lam=c(cvfit$lambda.min, cvfit$lambda.1se)
coef(cvfit, s=opt.lam)
load("CoxExample.RData")
y[1:5,]
fit=glmnet(x, y, family="cox")
plot(fit)
coef(fit, s=.05)
cvfit=cv.glmnet(x, y, family="cox")
plot(cvfit)
cvfit$lambda.min
cvfit$lambda.1se
coef.min=coef(cvfit, s="lambda.min")
active.min=which(coef.min!=0)
index.min=coef.min[active.min]
index.min
coef.min
load("SparseExample.RData")
class(x)
fit=glmnet(x,y)
cvfit=cv.glmnet(x,y)
plot(cvfit)
i=sample(1:5, size=25, replace=TRUE)
j=sample(1:20, size=25, replace=TRUE)
x=rnorm(25)
nx=sparseMatrix(i=i, j=j, x=x, dims=c(5, 20))
predict(cvfit, newx=nx, s="lambda.min")
?explicit_rcs
??explicit_rcs
install.packages("tgsify")
install.packages("Hmisc")
install.packages("rms")
install.packages("knitr")
